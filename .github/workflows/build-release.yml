name: Build and Release Stable OpenSUSE Kernel with T2 Patches

on:
  push:
    tags: 'v*'  # Trigger on version tags (e.g., v6.6.21-t2)
  workflow_dispatch:
    inputs:
      version:
        description: 'Kernel version (e.g., 6.6.21)'
        required: true

env:
  ARCH: x86_64
  STABLE_BRANCH: stable

jobs:
  build-release:
    runs-on: ubuntu-latest
    container:
      image: opensuse/tumbleweed:latest
      options: --privileged

    steps:
    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == 'workflow_dispatch' ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/v}" | cut -d'-' -f1 >> $GITHUB_OUTPUT
        fi
        echo "Using version: ${{ steps.version.outputs.VERSION }}"

    - name: Install dependencies
      run: |
        zypper --non-interactive refresh
        zypper --non-interactive install \
          git make gcc flex bison bc libopenssl-devel \
          ncurses-devel perl python3 rpm-build \
          patch cpio xz gzip rsync kmod hostname \
          elfutils libdw-devel libelf-devel dwarves

    - name: Clone OpenSUSE kernel (stable branch)
      run: |
        git clone --depth=1 --branch=${{ env.STABLE_BRANCH }} https://github.com/openSUSE/kernel.git
        cd kernel
        git submodule update --init --recursive

    - name: Checkout specific version if specified
      if: steps.version.outputs.VERSION != ''
      working-directory: ./kernel
      run: |
        git fetch --tags
        git checkout ${{ steps.version.outputs.VERSION }}

    - name: Clone T2 patches
      run: |
        git clone --depth=1 https://github.com/t2linux/linux-t2-patches.git

    - name: Apply patches
      working-directory: ./kernel
      run: |
        for patch in ../linux-t2-patches/*.patch; do
          patch -p1 < "$patch"
        done

    - name: Generate kernel configuration
      working-directory: ./kernel
      run: |
        make defconfig
        ./scripts/config --set-str CONFIG_LOCALVERSION "-t2"
        ./scripts/config --enable CONFIG_BLK_DEV_INITRD
        ./scripts/config --enable CONFIG_64BIT
        ./scripts/config --enable CONFIG_MODULES
        ./scripts/config --enable CONFIG_EFI_STUB
        ./scripts/config --enable CONFIG_EFI
        ./scripts/config --enable CONFIG_FB
        ./scripts/config --enable CONFIG_FRAMEBUFFER_CONSOLE
        make olddefconfig

    - name: Clean working tree while preserving config
      working-directory: ./kernel
      run: |
        cp .config ../kernel.config
        git clean -fdx
        git reset --hard
        mv ../kernel.config .config

    - name: Build kernel RPM packages
      working-directory: ./kernel
      run: |
        export BUILD_HOST=github-runner
        make -j$(nproc) rpm-pkg
        echo "Built RPMs:"
        find ~/rpmbuild/RPMS -name '*.rpm' -exec ls -la {} \;
        echo "Built SRPMs:"
        find ~/rpmbuild/SRPMS -name '*.src.rpm' -exec ls -la {} \;

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-rpms
        path: |
          ~/rpmbuild/RPMS/**/*.rpm
          ~/rpmbuild/SRPMS/**/*.src.rpm

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ~/rpmbuild/RPMS/**/*.rpm
          ~/rpmbuild/SRPMS/**/*.src.rpm
        generate_release_notes: true
